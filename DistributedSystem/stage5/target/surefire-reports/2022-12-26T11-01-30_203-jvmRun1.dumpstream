# Created at 2022-12-26T11:01:34.157
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:34.166
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:34.177
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 0'.

# Created at 2022-12-26T11:01:34.719
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:34.731
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:34.747
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 1'.

# Created at 2022-12-26T11:01:35.349
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:35.357
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:35.367
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 2'.

# Created at 2022-12-26T11:01:35.909
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:35.918
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:35.930
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 3'.

# Created at 2022-12-26T11:01:36.454
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:36.463
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:36.474
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 4'.

# Created at 2022-12-26T11:01:37.033
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:37.041
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:37.052
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 5'.

# Created at 2022-12-26T11:01:37.593
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:37.602
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:37.612
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 6'.

# Created at 2022-12-26T11:01:38.159
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'creating serverrunner'.

# Created at 2022-12-26T11:01:38.168
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Hello, World!'.

# Created at 2022-12-26T11:01:38.178
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'hello 7'.

# Created at 2022-12-26T11:01:38.178
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'should create gateway'.

# Created at 2022-12-26T11:01:38.274
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.283
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'gateway created'.

# Created at 2022-12-26T11:01:38.312
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.313
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.338
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.360
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.390
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.392
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.431
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.432
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.447
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.449
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'peerServer created'.

# Created at 2022-12-26T11:01:38.483
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.484
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:38.543
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:01:42.840
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8010 whose ID is 0 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.856
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8030 whose ID is 2 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.857
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8050 whose ID is 4 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.857
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8040 whose ID is 3 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.863
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8090 whose ID is 7 has the following ID as its leader: 6 and its state is OBSERVER'.

# Created at 2022-12-26T11:01:42.874
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8020 whose ID is 1 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.878
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8070 whose ID is 6 has the following ID as its leader: 6 and its state is LEADING'.

# Created at 2022-12-26T11:01:42.882
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8060 whose ID is 5 has the following ID as its leader: 6 and its state is FOLLOWING'.

# Created at 2022-12-26T11:01:42.921
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:01:48.081
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 1 heartbeat: 2 timestamp:'.

# Created at 2022-12-26T11:01:48.082
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070508070'.

# Created at 2022-12-26T11:01:50.589
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 5 heartbeat: 2 timestamp:'.

# Created at 2022-12-26T11:01:50.589
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070510583'.

# Created at 2022-12-26T11:01:50.643
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 4 heartbeat: 4 timestamp:'.

# Created at 2022-12-26T11:01:50.644
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070510636'.

# Created at 2022-12-26T11:01:52.960
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 3 heartbeat: 2 timestamp:'.

# Created at 2022-12-26T11:01:52.960
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070512953'.

# Created at 2022-12-26T11:01:53.146
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 4 heartbeat: 5 timestamp:'.

# Created at 2022-12-26T11:01:53.146
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070513143'.

# Created at 2022-12-26T11:01:53.176
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 7 heartbeat: 4 timestamp:'.

# Created at 2022-12-26T11:01:53.176
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070513169'.

# Created at 2022-12-26T11:01:53.177
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 6 heartbeat: 2 timestamp:'.

# Created at 2022-12-26T11:01:53.177
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070513170'.

# Created at 2022-12-26T11:01:55.524
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 0'.

# Created at 2022-12-26T11:01:55.529
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:01:55.531
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:01:55.543
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:01:55.585
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 0 heartbeat: 5 timestamp:'.

# Created at 2022-12-26T11:01:55.585
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070515580'.

# Created at 2022-12-26T11:01:55.649
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 4 heartbeat: 6 timestamp:'.

# Created at 2022-12-26T11:01:55.649
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070515648'.

# Created at 2022-12-26T11:01:55.678
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 6 heartbeat: 4 timestamp:'.

# Created at 2022-12-26T11:01:55.678
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070515676'.

# Created at 2022-12-26T11:01:55.678
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 7 heartbeat: 6 timestamp:'.

# Created at 2022-12-26T11:01:55.679
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070515677'.

# Created at 2022-12-26T11:01:57.538
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:01:57.604
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 1'.

# Created at 2022-12-26T11:01:57.605
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:01:57.605
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:01:57.606
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:01:58.088
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 1 heartbeat: 6 timestamp:'.

# Created at 2022-12-26T11:01:58.088
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070518087'.

# Created at 2022-12-26T11:01:59.111
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:01:59.126
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 2'.

# Created at 2022-12-26T11:01:59.127
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:01:59.127
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:01:59.128
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:00.467
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 3 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:00.467
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070520465'.

# Created at 2022-12-26T11:02:00.602
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 5 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:00.602
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070520600'.

# Created at 2022-12-26T11:02:00.630
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:00.645
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 3'.

# Created at 2022-12-26T11:02:00.645
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:00.646
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:00.647
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:00.655
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 4 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:00.655
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070520653'.

# Created at 2022-12-26T11:02:02.653
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:02.667
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 4'.

# Created at 2022-12-26T11:02:02.668
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:02.669
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:02.669
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:03.094
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 0 heartbeat: 8 timestamp:'.

# Created at 2022-12-26T11:02:03.095
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070523093'.

# Created at 2022-12-26T11:02:03.194
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 7 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:03.194
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070523192'.

# Created at 2022-12-26T11:02:04.175
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:04.190
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 5'.

# Created at 2022-12-26T11:02:04.191
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:04.191
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:04.192
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:05.601
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 0 heartbeat: 9 timestamp:'.

# Created at 2022-12-26T11:02:05.601
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070525599'.

# Created at 2022-12-26T11:02:05.602
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 1 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:05.602
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070525599'.

# Created at 2022-12-26T11:02:05.697
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:05.712
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 6'.

# Created at 2022-12-26T11:02:05.712
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:05.713
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:05.714
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:07.218
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:07.233
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 7'.

# Created at 2022-12-26T11:02:07.233
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:07.234
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:07.234
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:07.980
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 3 heartbeat: 9 timestamp:'.

# Created at 2022-12-26T11:02:07.981
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070527979'.

# Created at 2022-12-26T11:02:08.189
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 6 heartbeat: 7 timestamp:'.

# Created at 2022-12-26T11:02:08.189
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070528188'.

# Created at 2022-12-26T11:02:08.737
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:08.752
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 8'.

# Created at 2022-12-26T11:02:08.753
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8072'.

# Created at 2022-12-26T11:02:08.753
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:02:08.754
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:02:10.257
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:02:10.610
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 0 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:10.610
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070530608'.

# Created at 2022-12-26T11:02:10.611
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 5 heartbeat: 9 timestamp:'.

# Created at 2022-12-26T11:02:10.611
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070530609'.

# Created at 2022-12-26T11:02:10.690
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 6 heartbeat: 9 timestamp:'.

# Created at 2022-12-26T11:02:10.691
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070530689'.

# Created at 2022-12-26T11:02:12.984
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 3 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:12.984
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070532983'.

# Created at 2022-12-26T11:02:18.114
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 1 heartbeat: 9 timestamp:'.

# Created at 2022-12-26T11:02:18.115
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070538113'.

# Created at 2022-12-26T11:02:18.120
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 5 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:18.125
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070538118'.

# Created at 2022-12-26T11:02:18.204
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 6 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:18.211
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070538202'.

# Created at 2022-12-26T11:02:20.620
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 1 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:20.620
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070540619'.

# Created at 2022-12-26T11:02:20.681
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 4 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:20.681
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070540679'.

# Created at 2022-12-26T11:02:20.714
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'my ID is 7 heartbeat: 11 timestamp:'.

# Created at 2022-12-26T11:02:20.714
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream '1672070540712'.

# Created at 2022-12-26T11:02:35.640
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8010 whose ID is 0 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:35.640
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:38.014
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8040 whose ID is 3 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:38.015
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:43.146
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8060 whose ID is 5 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:43.146
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:43.232
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8070 whose ID is 6 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:43.232
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:45.648
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8020 whose ID is 1 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:45.650
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:45.717
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8050 whose ID is 4 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:45.723
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:45.749
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8090 whose ID is 7 just lost server with ID: 2'.

# Created at 2022-12-26T11:02:45.751
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 2'.

# Created at 2022-12-26T11:02:56.276
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 9'.

# Created at 2022-12-26T11:03:20.678
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8020 whose ID is 1 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:20.680
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:20.687
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:03:23.179
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8010 whose ID is 0 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:23.181
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:23.199
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:03:23.265
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8050 whose ID is 4 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:23.265
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:23.272
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:03:23.295
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8090 whose ID is 7 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:23.296
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:23.296
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'leader died on line 92'.

# Created at 2022-12-26T11:03:28.064
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8040 whose ID is 3 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:28.064
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:28.068
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:03:30.682
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8060 whose ID is 5 just lost server with ID: 6'.

# Created at 2022-12-26T11:03:30.691
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this peer just died 6'.

# Created at 2022-12-26T11:03:30.695
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'looking for leader'.

# Created at 2022-12-26T11:03:42.306
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8040 whose ID is 3 has the following ID as its leader: 5 and its state is FOLLOWING'.

# Created at 2022-12-26T11:03:42.306
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8010 whose ID is 0 has the following ID as its leader: 5 and its state is FOLLOWING'.

# Created at 2022-12-26T11:03:42.307
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8060 whose ID is 5 has the following ID as its leader: 5 and its state is LEADING'.

# Created at 2022-12-26T11:03:42.308
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'this is the server throwing the issue 8062'.

# Created at 2022-12-26T11:03:42.999
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8050 whose ID is 4 has the following ID as its leader: 5 and its state is FOLLOWING'.

# Created at 2022-12-26T11:03:43.248
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8090 whose ID is 7 has the following ID as its leader: 5 and its state is OBSERVER'.

# Created at 2022-12-26T11:03:44.320
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'sending new leader requests'.

# Created at 2022-12-26T11:03:44.322
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'have completed sending all the new leader requests'.

# Created at 2022-12-26T11:03:44.323
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:45.028
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'Server on port 8020 whose ID is 1 has the following ID as its leader: 5 and its state is FOLLOWING'.

# Created at 2022-12-26T11:03:48.253
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'new leader ID 5'.

# Created at 2022-12-26T11:03:48.253
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 10'.

# Created at 2022-12-26T11:03:48.254
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:48.255
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:48.259
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:49.764
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:49.779
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 11'.

# Created at 2022-12-26T11:03:49.779
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:49.780
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:49.780
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:51.283
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:51.298
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 12'.

# Created at 2022-12-26T11:03:51.298
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:51.298
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:51.299
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:52.805
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:52.819
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 13'.

# Created at 2022-12-26T11:03:52.819
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:52.820
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:52.820
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:54.325
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:54.339
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 14'.

# Created at 2022-12-26T11:03:54.340
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:54.340
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:54.341
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:55.348
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:55.362
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 15'.

# Created at 2022-12-26T11:03:55.362
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:55.363
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:55.363
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:56.870
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:56.885
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 16'.

# Created at 2022-12-26T11:03:56.885
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:56.886
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:56.886
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:58.392
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:58.406
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 17'.

# Created at 2022-12-26T11:03:58.407
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:58.407
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:58.408
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:03:59.413
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

# Created at 2022-12-26T11:03:59.425
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'REQUEST ID 18'.

# Created at 2022-12-26T11:03:59.426
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before send to leader at port 8062'.

# Created at 2022-12-26T11:03:59.426
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after take'.

# Created at 2022-12-26T11:03:59.427
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'before take'.

# Created at 2022-12-26T11:04:00.433
Corrupted STDOUT by directly writing to native stream in forked JVM 1. Stream 'after message recieved back'.

